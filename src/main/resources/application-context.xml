<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://mybatis.org/schema/mybatis-spring
          http://mybatis.org/schema/mybatis-spring.xsd"
       default-autowire="byName">
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>
    <context:property-placeholder location="classpath:jdbc.properties"/>


    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="select 1"></property>
        <property name="initialSize" value="10"/>

        <property name="maxActive" value="2000"/>

        <property name="maxIdle" value="200"/>

        <property name="minIdle" value="5"/>

        <property name="testWhileIdle" value="true"/>

        <property name="maxWait" value="1000"/>
    </bean>

    <!--
  define the SqlSessionFactory, notice that configLocation is not needed
  when you use MapperFactoryBean
  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <mybatis:scan base-package="com.shinowit.dao.mapper"/>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 自动扫描组件，需要把controller去掉，否则影响事务管理 -->
    <context:component-scan base-package="com.shinowit">
        <context:exclude-filter type="regex" expression="com.shinowit.web.*"/>
    </context:component-scan>


    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- 服务器 -->
        <property name="host" value="smtp.qq.com"/>
        <!-- 端口号 -->
        <property name="port" value="25"/>
        <!-- 用户名 -->
        <property name="username" value="1073736605@qq.com"/>
        <!--  密码   -->
        <property name="password" value="123456789wyh"/>
        <!-- SMTP服务器验证 -->
        <property name="javaMailProperties">
            <props>
                <!-- 验证身份 -->
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>
    <!--
       目前我用过的EMAIL账号都是网易的,下面列出网易的SMTP服务器名和端口号:
       网易邮箱         SMTP服务器     SMTP端口    POP3服务器     POP3端口
       @126.com    smtp.126.com      25         pop3.126.com     110
       @163.com    smtp.163.com      25         pop3.163.com     110
       @yeah.net   smtp.yeah.net      25         pop3.yeah.net    110
     -->

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <!-- 发件人email -->
        <property name="from" value="1073736605@qq.com"/>
        <!--
         收件人email
        <property name="to" value="to@yeah.net" />
        email主题(标题)
        <property name="subject" value="Subject" />
        email主题内容
        <property name="text">
          <value>ContentText</value>
        </property>
        -->
    </bean>

    <bean id="simpleMail" class="com.shinowit.tools.SendMail">
        <property name="mailSender" ref="javaMailSender"/>
        <property name="simpleMailMessage" ref="simpleMailMessage"/>
    </bean>

    <bean id="htmlMail" class="com.shinowit.tools.SendHtmlMail">
        <property name="stmpService" value="smtp.qq.com"/>
        <property name="sendEmail" value="1073736605@qq.com"/>
        <property name="emailPass" value="123456789wyh"/>
    </bean>


    <bean id="log4jdbcInterceptor" class="net.sf.log4jdbc.DataSourceSpyInterceptor"/>
    <bean id="dataSourceLog4jdbcAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <value>log4jdbcInterceptor</value>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>dataSource</value>
            </list>
        </property>
    </bean>


</beans>


